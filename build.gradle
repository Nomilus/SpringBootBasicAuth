plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // BCrypt
    implementation 'org.mindrot:jbcrypt:0.4'

    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Lombok + Mapstruct
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Dev
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Postgresql
    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE',
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}